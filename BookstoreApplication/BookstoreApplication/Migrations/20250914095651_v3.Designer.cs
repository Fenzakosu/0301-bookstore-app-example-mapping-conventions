// <auto-generated />
using System;
using BookstoreApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250914095651_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Srpski pisac postmodernizma, autor Hazarskog rečnika",
                            DateOfBirth = new DateTime(1929, 10, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Milorad Pavić"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "Nobelovac za književnost, autor Na Drini ćuprija",
                            DateOfBirth = new DateTime(1892, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Ivo Andrić"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Jedan od najvažnijih srpskih pisaca XX veka",
                            DateOfBirth = new DateTime(1935, 2, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Danilo Kiš"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Bosanski pisac, autor romana Derviš i smrt",
                            DateOfBirth = new DateTime(1910, 4, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Meša Selimović"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Srpski pisac, dramaturg i scenarista",
                            DateOfBirth = new DateTime(1930, 2, 4, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Borislav Pekić"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<int>("YearAwarded")
                        .HasColumnType("integer");

                    b.HasKey("AuthorId", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AwardId = 1,
                            YearAwarded = 1984
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 2,
                            YearAwarded = 1985
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 3,
                            YearAwarded = 2009
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 1,
                            YearAwarded = 1961
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 3,
                            YearAwarded = 1982
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 1,
                            YearAwarded = 1976
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 2,
                            YearAwarded = 1977
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 3,
                            YearAwarded = 1983
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 1,
                            YearAwarded = 1966
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 2,
                            YearAwarded = 1967
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 3,
                            YearAwarded = 1987
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 1,
                            YearAwarded = 1970
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 2,
                            YearAwarded = 1971
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 4,
                            YearAwarded = 2001
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 4,
                            YearAwarded = 2002
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StartYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Najpoznatija književna nagrada u Srbiji",
                            Name = "NIN-ova nagrada",
                            StartYear = 1954
                        },
                        new
                        {
                            Id = 2,
                            Description = "Nagrada za najbolje ostvarenje u oblasti pripovedne proze",
                            Name = "Andrićeva nagrada",
                            StartYear = 1975
                        },
                        new
                        {
                            Id = 3,
                            Description = "Nagrada za životno delo u oblasti književnosti",
                            Name = "Vukova nagrada",
                            StartYear = 1994
                        },
                        new
                        {
                            Id = 4,
                            Description = "Nagrada za roman godine",
                            Name = "Borislav Pekić",
                            StartYear = 2000
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "978-86-11-12345-1",
                            PageCount = 320,
                            PublishedDate = new DateTime(1984, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Hazarski rečnik"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "978-86-11-12345-2",
                            PageCount = 280,
                            PublishedDate = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Unutrašnja strana vetra"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            ISBN = "978-86-11-12345-3",
                            PageCount = 200,
                            PublishedDate = new DateTime(1988, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Predeo slikan čajem"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "978-86-11-12345-4",
                            PageCount = 420,
                            PublishedDate = new DateTime(1945, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Na Drini ćuprija"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            ISBN = "978-86-11-12345-5",
                            PageCount = 380,
                            PublishedDate = new DateTime(1942, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Travnička hronika"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            ISBN = "978-86-11-12345-6",
                            PageCount = 250,
                            PublishedDate = new DateTime(1954, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Prokleta avlija"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            ISBN = "978-86-11-12345-7",
                            PageCount = 180,
                            PublishedDate = new DateTime(1965, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Bašta, pepeo"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            ISBN = "978-86-11-12345-8",
                            PageCount = 150,
                            PublishedDate = new DateTime(1976, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Grobnica za Borisa Davidoviča"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            ISBN = "978-86-11-12345-9",
                            PageCount = 350,
                            PublishedDate = new DateTime(1966, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Derviš i smrt"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            ISBN = "978-86-11-12345-10",
                            PageCount = 400,
                            PublishedDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Tvrđava"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 5,
                            ISBN = "978-86-11-12345-11",
                            PageCount = 600,
                            PublishedDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Hodočašće Arsenija Njegovana"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            ISBN = "978-86-11-12345-12",
                            PageCount = 450,
                            PublishedDate = new DateTime(1988, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Atlantida"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Terazije 16, Beograd",
                            Name = "Prosveta",
                            Website = "https://www.prosveta.rs"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Žorža Klemansoa 22, Beograd",
                            Name = "Dereta",
                            Website = "https://www.dereta.rs"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Knez Mihailova 18, Beograd",
                            Name = "Stubovi kulture",
                            Website = "https://www.stubovi-kulture.rs"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AuthorAwards");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AuthorAwards");
                });
#pragma warning restore 612, 618
        }
    }
}
